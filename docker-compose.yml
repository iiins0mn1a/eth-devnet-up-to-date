services:
  bootstrap-collector:
    image: "alpine:3.19.0"
    container_name: bootstrap-collector
    command: >
      sh -c "
        apk add --no-cache curl jq netcat-openbsd &&
        sleep 10 &&
        curl -s beacon-chain-1:7777/eth/v1/node/identity | jq -r '.data.enr' > /share/bootstrap_enr.txt
      "
    depends_on:
      geth:
        condition: service_started
      beacon-chain-1:
        condition: service_started
      validator-1:
        condition: service_started
    volumes:
      - ./scripts:/scripts
      - ./share:/share

  # Creates a genesis state for the beacon chain using a YAML configuration file and
  # a deterministic set of 64 validators.
  create-beacon-chain-genesis:
    image: "gcr.io/prysmaticlabs/prysm/cmd/prysmctl:latest"
    container_name: prysmctl-genesis
    command:
      - testnet
      - generate-genesis
      - --fork=capella
      - --num-validators=64
      # - --nenesis-time-delay=15
      - --output-ssz=/consensus/genesis.ssz
      - --chain-config-file=/config/config.yml
      - --geth-genesis-json-in=/execution/genesis.json
      - --geth-genesis-json-out=/execution/genesis.json
    volumes:
      - ./config:/config
      - ./consensus:/consensus
      - ./execution:/execution

  # Removes the database of the go-ethereum execution client to ensure we start from a clean state.
  # (geth has a `removedb` option, but it asks for a keyboard confirmation, so we use this instead)
  geth-remove-db:
    image: "alpine:3.19.0"
    container_name: geth-remove-db
    command: rm -rf /execution/gethdata
    volumes:
      - ./execution:/execution

  # Sets up the genesis configuration for the go-ethereum client from a JSON file.
  geth-genesis:
    image: "ethereum/client-go:release-1.14"
    container_name: geth-genesis
    command: --datadir=/execution init /execution/genesis.json
    volumes:
      - ./execution:/execution
    depends_on:
      create-beacon-chain-genesis:
        condition: service_completed_successfully
      geth-remove-db:
        condition: service_completed_successfully

  # Runs the go-ethereum execution client with the specified, unlocked account and necessary
  # APIs to allow for proof-of-stake consensus via Prysm.
  geth:
    image: "ethereum/client-go:release-1.14"
    container_name: geth
    entrypoint: ["/scripts/geth-entrypoint.sh"]
    volumes:
      - ./scripts:/scripts
      - ./execution:/execution
    depends_on:
      geth-genesis:
        condition: service_completed_successfully

  # Runs a Prysm beacon chain from a specified genesis state created in the previous step
  # and connects to go-ethereum in the same network as the execution client.
  # The account used in go-ethereum is set as the suggested fee recipient for transactions
  # proposed via the validators attached to the beacon node.
  beacon-chain-1:
    image: "gcr.io/prysmaticlabs/prysm/beacon-chain:latest"
    container_name: beacon-chain-1
    entrypoint: ["/scripts/beacon-chain-1-entrypoint.sh"]
    volumes:
      - ./scripts:/scripts
      - ./consensus:/consensus
      - ./config:/config
      - ./execution:/execution
    depends_on:
      geth:
        condition: service_started
      create-beacon-chain-genesis:
        condition: service_completed_successfully
    ports:
      - 7777:7777

  # We run a validator client with 64, deterministically-generated keys that match
  # The validator keys present in the beacon chain genesis state generated a few steps above.
  validator-1:
    image: "gcr.io/prysmaticlabs/prysm/validator:latest"
    container_name: validator-1
    entrypoint: ["/scripts/validator-1-entrypoint.sh"]
    volumes:
      - ./scripts:/scripts
      - ./consensus:/consensus
      - ./config:/config
    depends_on:
      beacon-chain-1:
        condition: service_started

  # Runs other nodes according to node-1
  beacon-chain-2:
    image: "gcr.io/prysmaticlabs/prysm/beacon-chain:latest"
    container_name: beacon-chain-2
    entrypoint: ["/scripts/beacon-chain-2-entrypoint.sh"]
    volumes:
      - ./scripts:/scripts
      - ./consensus:/consensus
      - ./config:/config
      - ./execution:/execution
      - ./share:/share
    depends_on:
      geth:
        condition: service_started
      create-beacon-chain-genesis:
        condition: service_completed_successfully
      bootstrap-collector:
        condition: service_completed_successfully

  beacon-chain-3:
    image: "gcr.io/prysmaticlabs/prysm/beacon-chain:latest"
    container_name: beacon-chain-3
    entrypoint: ["/scripts/beacon-chain-3-entrypoint.sh"]
    volumes:
      - ./scripts:/scripts
      - ./consensus:/consensus
      - ./config:/config
      - ./execution:/execution
      - ./share:/share
    depends_on:
      geth:
        condition: service_started
      create-beacon-chain-genesis:
        condition: service_completed_successfully
      bootstrap-collector:
        condition: service_completed_successfully

  beacon-chain-4:
    image: "gcr.io/prysmaticlabs/prysm/beacon-chain:latest"
    container_name: beacon-chain-4
    entrypoint: ["/scripts/beacon-chain-4-entrypoint.sh"]
    volumes:
      - ./scripts:/scripts
      - ./consensus:/consensus
      - ./config:/config
      - ./execution:/execution
      - ./share:/share
    depends_on:
      geth:
        condition: service_started
      create-beacon-chain-genesis:
        condition: service_completed_successfully
      bootstrap-collector:
        condition: service_completed_successfully

  validator-2:
    image: "gcr.io/prysmaticlabs/prysm/validator:latest"
    container_name: validator-2
    entrypoint: ["/scripts/validator-2-entrypoint.sh"]
    volumes:
      - ./scripts:/scripts
      - ./consensus:/consensus
      - ./config:/config
    depends_on:
      beacon-chain-2:
        condition: service_started

  validator-3:
    image: "gcr.io/prysmaticlabs/prysm/validator:latest"
    container_name: validator-3
    entrypoint: ["/scripts/validator-3-entrypoint.sh"]
    volumes:
      - ./scripts:/scripts
      - ./consensus:/consensus
      - ./config:/config
    depends_on:
      beacon-chain-3:
        condition: service_started

  validator-4:
    image: "gcr.io/prysmaticlabs/prysm/validator:latest"
    container_name: validator-4
    entrypoint: ["/scripts/validator-4-entrypoint.sh"]
    volumes:
      - ./scripts:/scripts
      - ./consensus:/consensus
      - ./config:/config
    depends_on:
      beacon-chain-4:
        condition: service_started